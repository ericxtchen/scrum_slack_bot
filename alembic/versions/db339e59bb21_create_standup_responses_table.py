"""create standup_responses table

Revision ID: db339e59bb21
Revises: 
Create Date: 2025-08-13 22:45:16.180375

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'db339e59bb21'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('standup_responses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('channel_id', sa.String(), nullable=False),
    sa.Column('response', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('teams')
    # op.drop_table('metric_snapshots')
    # op.drop_table('users')
    # op.drop_table('tickets')
    # op.drop_table('sprints')
    # op.drop_table('retrospectives')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('retrospectives',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('improvement_summary', postgresql.OID(), autoincrement=False, nullable=True),
    sa.Column('positive_summary', postgresql.OID(), autoincrement=False, nullable=True),
    sa.Column('sprint_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sprint_id'], ['sprints.id'], name=op.f('fkjcr5vkqoth1qfqq3wwqonqry1')),
    sa.PrimaryKeyConstraint('id', name=op.f('retrospectives_pkey')),
    sa.UniqueConstraint('sprint_id', name=op.f('ukfj4nneu9p3ei4na1futg7kjb7'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('sprints',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('sprint_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('sprint_status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.CheckConstraint("sprint_status::text = ANY (ARRAY['PLANNED'::character varying, 'ACTIVE'::character varying, 'COMPLETED'::character varying]::text[])", name='sprints_sprint_status_check'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='fkkrsm8jcff82ewrksfkppa9dwf'),
    sa.PrimaryKeyConstraint('id', name='sprints_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tickets',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('externalid', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('story_points', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sprint_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.CheckConstraint("status::text = ANY (ARRAY['TODO'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying]::text[])", name=op.f('tickets_status_check')),
    sa.ForeignKeyConstraint(['sprint_id'], ['sprints.id'], name=op.f('fk4meq5l81f8llk0gw4ek5xdns1')),
    sa.PrimaryKeyConstraint('id', name=op.f('tickets_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('access_token', sa.VARCHAR(length=4096), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(length=4096), autoincrement=False, nullable=True),
    sa.Column('access_token_expires_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('principal_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('cloud_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('site_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('principal_name', name=op.f('uko40s201nyp3ashia0861mofv1'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('metric_snapshots',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('metric_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('metric_value', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=False),
    sa.Column('sprint_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['sprint_id'], ['sprints.id'], name=op.f('fkbfdvonuas11yvk1lgkqjtiol1')),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name=op.f('fks0q1y2cugitf4cndpt3y22iqq')),
    sa.PrimaryKeyConstraint('id', name=op.f('metric_snapshots_pkey'))
    )
    op.create_table('teams',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('team_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('teams_pkey'))
    )
    op.drop_table('standup_responses')
    # ### end Alembic commands ###
